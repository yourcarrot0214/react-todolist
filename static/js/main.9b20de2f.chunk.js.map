{"version":3,"sources":["redux/constants.js","modules/timeFactory.js","components/Clock.jsx","components/Todolist.jsx","components/Todo.jsx","components/TodoForm.jsx","redux/containers.js","redux/actions.js","App.js","redux/reducers.js","redux/reduxStore.js","index.js"],"names":["constants","ADD_TODO","COMPLETE_TODO","EDIT_TODO","REMOVE_TODO","currentTime","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","compose","fns","arg","reduce","composed","Fn","remaningPercentage","toFixed","string","convertedTime","Number","ClockContainer","styled","div","Clock","props","setInterval","clock","document","querySelector","percentage","innerText","Date","toLocaleTimeString","className","React","memo","TodolistContainer","Todolist","todos","map","todo","TodoConnecter","id","TodoFormConnecter","FcButton","TimeTag","TimeLine","TodoItemBlock","CheckCircle","done","css","Text","editmode","InsertForm","form","EditInput","input","Todo","editTodo","useState","CheckBox","setCheckBox","EditMode","setEditMode","text","EditText","setEditText","start","end","laptime","undefined","convertedLaptime","lapse","onClick","completeTodo","prev","onSubmit","e","preventDefault","onChange","target","value","placeholder","autoFocus","removeTodo","CircleButton","button","open","InsertFormPositioner","Input","TodoForm","addTodo","setOpen","setText","mapDispatchTodoAction","dispatch","type","C","uuid","ClockConnecter","connect","state","TodolistConnecter","GlobalStyle","createGlobalStyle","AppContainer","App","lapseTime","startTime","calculated","Math","floor","initialState","toLocaleDateString","year","month","day","weekday","store","createStore","combineReducers","action","UPDATE_TIME","filter","localStorage","JSON","parse","subscribe","stringify","getState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9b20de2f.chunk.js","sourcesContent":["const constants = {\n  ADD_TODO: \"ADD_TODO\",\n  COMPLETE_TODO: \"COMPLETE_TODO\",\n  EDIT_TODO: \"EDIT_TODO\",\n  REMOVE_TODO: \"REMOVE_TODO\",\n};\n\nexport default constants;\n","const SECONDS_PER_DAY = 86400;\nconst SECONDS_PER_HOURS = 3600;\nconst SECONDS_PER_MINUTES = 60;\n\nconst currentTime = (date) => ({\n  hours: date.getHours(),\n  minutes: date.getMinutes(),\n  seconds: date.getSeconds(),\n});\n\nconst calculateSeconds = ({ hours, minutes, seconds }) => {\n  const calculated =\n    hours * SECONDS_PER_HOURS + minutes * SECONDS_PER_MINUTES + seconds;\n  const result = 100 - (calculated / SECONDS_PER_DAY) * 100;\n  return result.toFixed(1);\n};\n\nconst printToPercentage = (string) => `오늘 하루는 ${string}% 남았습니다.`;\n\nconst compose = (...fns) => (arg) =>\n  fns.reduce((composed, Fn) => Fn(composed), arg);\n\n// test code\n// console.log(remaningPercentage(new Date()));\nexport const remaningPercentage = compose(\n  currentTime,\n  calculateSeconds,\n  printToPercentage\n);\n\nconst appendZero = (date) => ({\n  hours: date.hours < 10 ? Number(\"0\" + date.hours) : date.hours,\n  minutes: date.minutes < 10 ? Number(date.minutes + \"0\") : date.minutes,\n});\n\n// test code\n// console.log(convertedTime(new Date()));\nexport const convertedTime = compose(currentTime, appendZero);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { remaningPercentage } from \"../modules/timeFactory.js\";\n\nconst ClockContainer = styled.div`\n  padding-top: 48px;\n  padding-left: 32px;\n  padding-right: 32px;\n  padding-bottom: 24px;\n  border-bottom: 1px solid #e9ecef;\n  h1 {\n    margin: 0;\n    font-size: 36px;\n    color: #343a40;\n  }\n  .day {\n    margin-top: 4px;\n    color: #868e96;\n    font-size: 21px;\n    height: 1rem;\n  }\n  .percentage {\n    color: #20c997;\n    font-size: 18px;\n    margin-top: 40px;\n    font-weight: bold;\n    height: 1rem;\n  }\n`;\n\nconst Clock = (props) => {\n  setInterval(() => {\n    const clock = document.querySelector(\".day\");\n    const percentage = document.querySelector(\".percentage\");\n    clock.innerText = new Date().toLocaleTimeString();\n    percentage.innerText = remaningPercentage(new Date());\n  }, 1000);\n\n  return (\n    <ClockContainer>\n      <h1>{props.date}</h1>\n      <div className=\"day\"></div>\n      <div className=\"percentage\"></div>\n    </ClockContainer>\n  );\n};\n\nexport default React.memo(Clock);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TodoConnecter, TodoFormConnecter } from \"../redux/containers.js\";\n\nconst TodolistContainer = styled.div`\n  flex: 1;\n  padding: 20px 32px;\n  padding-bottom: 48px;\n  overflow-y: auto;\n`;\n\nconst Todolist = ({ todos }) => {\n  return (\n    <TodolistContainer>\n      {todos.map((todo) => (\n        <TodoConnecter key={todo.id} todo={todo} />\n      ))}\n      <TodoFormConnecter />\n    </TodolistContainer>\n  );\n};\n\nexport default React.memo(Todolist);\n","import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { MdDone, MdDelete, MdEdit } from \"react-icons/md\";\n\nconst FcButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #dee2e6;\n  font-size: 24px;\n  margin-left: 12px;\n  cursor: pointer;\n  &:hover {\n    color: #ff6b6b;\n  }\n  display: none;\n`;\n\nconst TimeTag = styled.div`\n  font-size: 16px;\n  color: #495057;\n  background: #38d9a9;\n  padding: 6px 6px;\n  margin-right: 2rem;\n  border-radius: 6px;\n`;\n\nconst TimeLine = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  width: 100%;\n`;\n\nconst TodoItemBlock = styled.div`\n  display: flex;\n  align-items: center;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  margin-bottom: 12px;\n  border-bottom: 1px solid #e9ecef;\n  &:hover {\n    ${FcButton} {\n      display: initial;\n    }\n  }\n`;\n\nconst CheckCircle = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 16px;\n  border: 1px solid #ced4da;\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  cursor: pointer;\n  ${(props) =>\n    props.done &&\n    css`\n      border: 1px solid #38d9a9;\n      color: #38d9a9;\n    `}\n`;\n\nconst Text = styled.div`\n  flex: 1;\n  font-size: 21px;\n  color: #495057;\n  ${(props) =>\n    props.done &&\n    css`\n      color: #ced4da;\n    `}\n  ${(props) =>\n    props.editmode &&\n    css`\n      display: none;\n    `}\n`;\n\nconst InsertForm = styled.form``;\n\nconst EditInput = styled.input`\n  display: none;\n  flex: 1;\n  outline: none;\n  font-size: 21px;\n  border: none;\n  ${(props) =>\n    props.editmode &&\n    css`\n      display: inline-block;\n    `}\n`;\n\nconst Todo = (props) => {\n  const { todo, editTodo } = props;\n\n  const [CheckBox, setCheckBox] = useState(false);\n  const [EditMode, setEditMode] = useState(false);\n  const [EditText, setEditText] = useState(todo.text);\n\n  const convertedLaptime = (laptime) => {\n    const { hours, minutes } = laptime;\n    let result = \"\";\n    if (\n      (hours === 0 && minutes === 0) ||\n      (hours === undefined && minutes === undefined)\n    ) {\n      return result;\n    } else if (hours === 0 && minutes !== 0) {\n      return <TimeTag>{`Laptime ${minutes}분`}</TimeTag>;\n    } else {\n      return <TimeTag>{`Laptime ${hours}시간 ${minutes}분`}</TimeTag>;\n    }\n  };\n\n  const onChangeValue = (e) => {\n    setEditText(e.target.value);\n  };\n\n  const onEditTodo = () => {\n    setEditMode(!EditMode);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (todo.text === EditText) setEditMode(!EditMode);\n    else {\n      editTodo(props.todo.id, EditText);\n      setEditMode(!EditMode);\n    }\n  };\n\n  const onCompleteTodo = () => {\n    props.completeTodo(props.todo.id, !CheckBox);\n    setCheckBox((prev) => !prev);\n  };\n\n  const onRemoveTodo = () => {\n    props.removeTodo(props.todo.id);\n  };\n\n  return (\n    <>\n      <TimeLine>\n        <TimeTag>{`${todo.start.hours} : ${todo.start.minutes}`}</TimeTag>\n        {todo.end.minutes && (\n          <TimeTag>{`${todo.end.hours} : ${todo.end.minutes}`}</TimeTag>\n        )}\n        {convertedLaptime(todo.lapse)}\n      </TimeLine>\n      <TodoItemBlock>\n        <CheckCircle onClick={onCompleteTodo} done={todo.done}>\n          {todo.done && <MdDone />}\n        </CheckCircle>\n        <Text editmode={EditMode} done={todo.done}>\n          {todo.text}\n        </Text>\n        <InsertForm onSubmit={onSubmit}>\n          <EditInput\n            editmode={EditMode}\n            onChange={onChangeValue}\n            value={EditText}\n            placeholder={todo.text}\n            autoFocus\n          />\n        </InsertForm>\n        <FcButton>\n          <MdDelete onClick={onRemoveTodo} />\n        </FcButton>\n        <FcButton>\n          <MdEdit onClick={onEditTodo} />\n        </FcButton>\n      </TodoItemBlock>\n    </>\n  );\n};\n\nexport default React.memo(Todo);\n","import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { MdAdd } from \"react-icons/md\";\n\nconst CircleButton = styled.button`\n  background: #38d9a9;\n  &:hover {\n    background: #63e6be;\n  }\n  &:active {\n    background: #20c997;\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 60px;\n  height: 60px;\n  display: block;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n  position: absolute;\n  left: 50%;\n  bottom: 0px;\n  transform: translate(-50%, 50%);\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  transition: 0.125s all ease-in;\n  ${(props) =>\n    props.open &&\n    css`\n      background: #ff6b6b;\n      &:hover {\n        background: #ff8787;\n      }\n      &:active {\n        background: #fa5252;\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n`;\n\nconst InsertForm = styled.form`\n  background: #f8f9fa;\n  padding-left: 32px;\n  padding-top: 32px;\n  padding-right: 32px;\n  padding-bottom: 72px;\n\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n  border-top: 1px solid #e9ecef;\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid #dee2e6;\n  width: 100%;\n  outline: none;\n  font-size: 18px;\n  box-sizing: border-box;\n`;\n\nconst TodoForm = (props) => {\n  const { addTodo } = props;\n  const [open, setOpen] = useState(false);\n  const [text, setText] = useState(\"\");\n\n  const onToggle = () => setOpen(!open);\n  const onChangeValue = (e) => {\n    setText(e.target.value);\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    addTodo(text);\n    setText(\"\");\n    setOpen(!open);\n  };\n\n  return (\n    <>\n      {open && (\n        <InsertFormPositioner>\n          <InsertForm onSubmit={onSubmit}>\n            <Input\n              value={text}\n              onChange={onChangeValue}\n              autoFocus\n              placeholder=\"할 일을 입력 후 Enter키를 때리세요.\"\n            />\n          </InsertForm>\n        </InsertFormPositioner>\n      )}\n      <CircleButton onClick={onToggle} open={open}>\n        <MdAdd />\n      </CircleButton>\n    </>\n  );\n};\n\nexport default React.memo(TodoForm);\n","import { connect } from \"react-redux\";\nimport { addTodo, editTodo, removeTodo, completeTodo } from \"./actions.js\";\nimport Clock from \"../components/Clock.jsx\";\nimport Todolist from \"../components/Todolist.jsx\";\nimport Todo from \"../components/Todo.jsx\";\nimport TodoForm from \"../components/TodoForm.jsx\";\n\n// mapDispatchToProps\nconst mapDispatchTodoAction = (dispatch) => ({\n  addTodo: (text) => dispatch(addTodo(text)),\n  completeTodo: (id, done) => dispatch(completeTodo(id, done)),\n  editTodo: (id, text) => dispatch(editTodo(id, text)),\n  removeTodo: (id) => dispatch(removeTodo(id)),\n});\n\n// mapStateToProps\n// clock.jsx\nconst mapStateDateToProps = (state) => ({ date: state.date });\n// todolist.jsx\nconst mapStateTodosToProps = (state) => ({ todos: [...state.todos] });\n\nexport const ClockConnecter = connect(mapStateDateToProps, null)(Clock);\nexport const TodolistConnecter = connect(mapStateTodosToProps, null)(Todolist);\nexport const TodoConnecter = connect(null, mapDispatchTodoAction)(Todo);\nexport const TodoFormConnecter = connect(null, mapDispatchTodoAction)(TodoForm);\n","import uuid from \"react-uuid\";\nimport C from \"./constants.js\";\nimport { convertedTime } from \"../modules/timeFactory.js\";\n\nexport const addTodo = (text) => ({\n  type: C.ADD_TODO,\n  id: uuid(),\n  text: text,\n  done: false,\n  start: convertedTime(new Date()),\n});\n\nexport const completeTodo = (id, done) => ({\n  type: C.COMPLETE_TODO,\n  id,\n  done,\n  end: done ? convertedTime(new Date()) : {},\n});\n\nexport const editTodo = (id, text) => ({\n  type: C.EDIT_TODO,\n  id,\n  text,\n});\n\nexport const removeTodo = (id) => ({\n  type: C.REMOVE_TODO,\n  id,\n});\n","import React from \"react\";\nimport { ClockConnecter, TodolistConnecter } from \"./redux/containers.js\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    height: 100%;\n  }\n  body {\n    box-sizing: border-box;\n    background: #e9ecef;\n  }\n`;\n\nconst AppContainer = styled.div`\n  width: 512px;\n  height: 768px;\n\n  position: relative;\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\n\n  margin: 0 auto;\n\n  margin-top: 32px;\n  margin-bottom: 32px;\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <AppContainer>\n        <ClockConnecter />\n        <TodolistConnecter />\n      </AppContainer>\n    </>\n  );\n}\n\nexport default React.memo(App);\n","import C from \"./constants.js\";\n\nconst MINUTES_PER_HOUR = 60;\nconst MINUTES_PER_DAY = 1440;\n\nconst date = (state = \"\", action) => {\n  switch (action.type) {\n    case C.UPDATE_TIME:\n      return action.date;\n    default:\n      return state;\n  }\n};\n\nconst lapseTime = (start, end) => {\n  const startTime = start.hours * MINUTES_PER_HOUR + start.minutes;\n  const endTime =\n    start.hours > end.hours\n      ? MINUTES_PER_DAY\n      : end.hours * MINUTES_PER_HOUR + end.minutes;\n\n  const calculated = endTime - startTime;\n  const result = {\n    hours: Math.floor(calculated / 60),\n    minutes: calculated % 60,\n  };\n\n  return result;\n};\n\nconst todos = (state = [], action) => {\n  switch (action.type) {\n    case C.ADD_TODO:\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          done: action.done,\n          start: action.start,\n          end: {},\n          lapse: {},\n        },\n      ];\n    case C.COMPLETE_TODO:\n      return state.map((todo) =>\n        todo.id === action.id\n          ? {\n              ...todo,\n              done: action.done,\n              end: action.end,\n              lapse: action.done ? lapseTime(todo.start, action.end) : {},\n            }\n          : todo\n      );\n    case C.EDIT_TODO:\n      return state.map((todo) =>\n        todo.id === action.id\n          ? {\n              ...todo,\n              text: action.text,\n            }\n          : todo\n      );\n    case C.REMOVE_TODO:\n      return state.filter((todo) => todo.id !== action.id);\n    default:\n      return state;\n  }\n};\n\nexport { date, todos };\n","import { createStore, combineReducers } from \"redux\";\nimport { date, todos } from \"./reducers.js\";\n\nconst options = {\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\",\n  weekday: \"long\",\n};\n\nconst initialState = {\n  date: new Date().toLocaleDateString(\"ko-KR\", options),\n};\n\n// store setup\nconst store = createStore(\n  combineReducers({ date, todos }),\n  localStorage[\"DayLine-store\"]\n    ? JSON.parse(localStorage[\"DayLine-store\"])\n    : initialState\n);\n\n// localStorage sync\nstore.subscribe(\n  () => (localStorage[\"DayLine-store\"] = JSON.stringify(store.getState()))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/reduxStore\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}